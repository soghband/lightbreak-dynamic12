import { __decorate, __extends, __metadata } from "tslib";
import { Component } from '@angular/core';
import { AutoFormMasterFunctionComponent } from '../master-function/auto-form-master-function.component';
import { FormHttpRequestService } from '../../service/form-http-request.service';
import { LockScreenService } from '../../service/lock-screen.service';
var AutoFormComponent = /** @class */ (function (_super) {
    __extends(AutoFormComponent, _super);
    function AutoFormComponent(http, lockScr) {
        var _this = _super.call(this, http, lockScr) || this;
        _this.http = http;
        _this.lockScr = lockScr;
        return _this;
    }
    AutoFormComponent.ctorParameters = function () { return [
        { type: FormHttpRequestService },
        { type: LockScreenService }
    ]; };
    AutoFormComponent = __decorate([
        Component({
            selector: 'lb9-auto-form',
            template: "<div class=\"autoForm\">\n    <div class=\"searchPanel\">\n        <div class=\"searchPanelRow{{(config.module && config.module.list && config.filter && config.filter.paramList && config.filter.paramList.length > 0 ? '': ' hide')}}\">\n            <div class=\"searchInput\">\n                <ng-container *ngIf=\"filter.form && filter.form.containerList\">\n                    <lb9-dynamic-form #filterForm [formCreation]=\"filter\" [model]=\"model\"></lb9-dynamic-form>\n                </ng-container>\n            </div>\n            <div class=\"searchAdvBtn\" *ngIf=\"config.filterAdvance\">\n                <div class=\"more\" (click)=\"switchFilterMode()\">\n                    <span class=\"glyphicon glyphicon-list\"></span>\n                </div>\n            </div>\n            <div class=\"searchButton\">\n                <div class=\"btn-style-dynamic\" [innerHTML]=\"button.search\" (click)=\"processFilter()\"></div>\n                <div class=\"btn-style-dynamic clearBtn\" [innerHTML]=\"button.clear\" (click)=\"clearFilter()\"></div>\n            </div>\n\n        </div>\n    </div>\n    <div *ngIf=\"config.module && config.module.add\" class=\"btn-style-dynamic\" (click)=\"openAddForm()\" [innerHTML]=\"button.add\"></div>\n    <div class=\"{{config.module && config.module.list ? '': ' hide'}}\">\n        <lb9-dynamic-table #dynamicTable [tableCreation]=\"dataList\" (callBack)=\"processListCallback($event)\"></lb9-dynamic-table>\n    </div>\n</div>\n<lb9-content-popup #formPopUp [header]=\"(mode == 'add' ? (config.content ? config.content.addHeader : '') : (config.content ? config.content.editHeader : ''))\"\n                   [closeByButtonOnly]=\"true\"\n                   [noScroll]=\"true\">\n    <ng-container *ngIf=\"form.form && form.form.containerList\">\n        <lb9-dynamic-form  #dynamicForm [formCreation]=\"form\" [model]=\"model\"></lb9-dynamic-form>\n        <div class=\"btnPanel\">\n            <div class=\"btn-style-dynamic\" (click)=\"save()\" [innerHTML]=\"button.save\"></div>\n            <div *ngIf=\"mode == 'add'\" class=\"btn-style-dynamic clearBtn\" (click)=\"clearForm()\" [innerHTML]=\"button.clear\"></div>\n            <div *ngIf=\"mode == 'edit'\" class=\"btn-style-dynamic clearBtn\" (click)=\"resetForm()\" [innerHTML]=\"button.reset\"></div>\n        </div>\n    </ng-container>\n</lb9-content-popup>\n<lb9-content-popup #confirmPopUp [header]=\"config.content ? config.content.confirmDeleteHeader : ''\">\n    <div class=\"btn-style-dynamic\" (click)=\"confirmDelete()\" [innerHTML]=\"button.confirm\"></div>\n    <div class=\"btn-style-dynamic clearBtn\" (click)=\"confirmPopUp.closePopup(true)\" [innerHTML]=\"button.cancel\"></div>\n</lb9-content-popup>\n<lb9-content-popup #errorPopUp [header]=\"'Error'\">\n    <div>{{errorContent}}</div>\n    <div class=\"btnPanel\">\n        <div class=\"btn-style-dynamic text-center\" (click)=\"actKnownError()\" [innerHTML]=\"button.confirm\"></div>\n    </div>\n</lb9-content-popup>\n",
            styles: [""]
        }),
        __metadata("design:paramtypes", [FormHttpRequestService, LockScreenService])
    ], AutoFormComponent);
    return AutoFormComponent;
}(AutoFormMasterFunctionComponent));
export { AutoFormComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnb2RpZ2l0L2xpZ2h0LWJyZWFrLWR5bmFtaWMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L2F1dG8tZm9ybS9hdXRvLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBQywrQkFBK0IsRUFBQyxNQUFNLHdEQUF3RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLHlDQUF5QyxDQUFDO0FBQy9FLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBT3BFO0lBQXVDLHFDQUErQjtJQUNwRSwyQkFBb0IsSUFBNEIsRUFBVSxPQUF5QjtRQUFuRixZQUNFLGtCQUFNLElBQUksRUFBRSxPQUFPLENBQUMsU0FDckI7UUFGbUIsVUFBSSxHQUFKLElBQUksQ0FBd0I7UUFBVSxhQUFPLEdBQVAsT0FBTyxDQUFrQjs7SUFFbkYsQ0FBQzs7Z0JBRnlCLHNCQUFzQjtnQkFBa0IsaUJBQWlCOztJQUR4RSxpQkFBaUI7UUFMN0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsNDhGQUF5Qzs7U0FFMUMsQ0FBQzt5Q0FFMEIsc0JBQXNCLEVBQWtCLGlCQUFpQjtPQUR4RSxpQkFBaUIsQ0FJN0I7SUFBRCx3QkFBQztDQUFBLEFBSkQsQ0FBdUMsK0JBQStCLEdBSXJFO1NBSlksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QXV0b0Zvcm1NYXN0ZXJGdW5jdGlvbkNvbXBvbmVudH0gZnJvbSAnLi4vbWFzdGVyLWZ1bmN0aW9uL2F1dG8tZm9ybS1tYXN0ZXItZnVuY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7Rm9ybUh0dHBSZXF1ZXN0U2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZS9mb3JtLWh0dHAtcmVxdWVzdC5zZXJ2aWNlJztcbmltcG9ydCB7TG9ja1NjcmVlblNlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2UvbG9jay1zY3JlZW4uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xiOS1hdXRvLWZvcm0nLFxuICB0ZW1wbGF0ZVVybDogJy4vYXV0by1mb3JtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vYXV0by1mb3JtLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBBdXRvRm9ybUNvbXBvbmVudCBleHRlbmRzIEF1dG9Gb3JtTWFzdGVyRnVuY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEZvcm1IdHRwUmVxdWVzdFNlcnZpY2UsIHByaXZhdGUgbG9ja1NjcjpMb2NrU2NyZWVuU2VydmljZSkge1xuICAgIHN1cGVyKGh0dHAsIGxvY2tTY3IpXG4gIH1cbn1cbiJdfQ==