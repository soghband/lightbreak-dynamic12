import { Component } from '@angular/core';
import { AutoFormMasterFunctionComponent } from '../master-function/auto-form-master-function.component';
import { FormHttpRequestService } from '../../service/form-http-request.service';
import { LockScreenService } from '../../service/lock-screen.service';
export class AutoFormComponent extends AutoFormMasterFunctionComponent {
    constructor(http, lockScr) {
        super(http, lockScr);
        this.http = http;
        this.lockScr = lockScr;
    }
}
AutoFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'lb9-auto-form',
                template: "<div class=\"autoForm\">\n    <div class=\"searchPanel\">\n        <div class=\"searchPanelRow{{(config.module && config.module.list && config.filter && config.filter.paramList && config.filter.paramList.length > 0 ? '': ' hide')}}\">\n            <div class=\"searchInput\">\n                <ng-container *ngIf=\"filter.form && filter.form.containerList\">\n                    <lb9-dynamic-form #filterForm [formCreation]=\"filter\" [model]=\"model\"></lb9-dynamic-form>\n                </ng-container>\n            </div>\n            <div class=\"searchAdvBtn\" *ngIf=\"config.filterAdvance\">\n                <div class=\"more\" (click)=\"switchFilterMode()\">\n                    <span class=\"glyphicon glyphicon-list\"></span>\n                </div>\n            </div>\n            <div class=\"searchButton\">\n                <div class=\"btn-style-dynamic\" [innerHTML]=\"button.search\" (click)=\"processFilter()\"></div>\n                <div class=\"btn-style-dynamic clearBtn\" [innerHTML]=\"button.clear\" (click)=\"clearFilter()\"></div>\n            </div>\n\n        </div>\n    </div>\n    <div *ngIf=\"config.module && config.module.add\" class=\"btn-style-dynamic\" (click)=\"openAddForm()\" [innerHTML]=\"button.add\"></div>\n    <div class=\"{{config.module && config.module.list ? '': ' hide'}}\">\n        <lb9-dynamic-table #dynamicTable [tableCreation]=\"dataList\" (callBack)=\"processListCallback($event)\"></lb9-dynamic-table>\n    </div>\n</div>\n<lb9-content-popup #formPopUp [header]=\"(mode == 'add' ? (config.content ? config.content.addHeader : '') : (config.content ? config.content.editHeader : ''))\"\n                   [closeByButtonOnly]=\"true\"\n                   [noScroll]=\"true\">\n    <ng-container *ngIf=\"form.form && form.form.containerList\">\n        <lb9-dynamic-form  #dynamicForm [formCreation]=\"form\" [model]=\"model\"></lb9-dynamic-form>\n        <div class=\"btnPanel\">\n            <div class=\"btn-style-dynamic\" (click)=\"save()\" [innerHTML]=\"button.save\"></div>\n            <div *ngIf=\"mode == 'add'\" class=\"btn-style-dynamic clearBtn\" (click)=\"clearForm()\" [innerHTML]=\"button.clear\"></div>\n            <div *ngIf=\"mode == 'edit'\" class=\"btn-style-dynamic clearBtn\" (click)=\"resetForm()\" [innerHTML]=\"button.reset\"></div>\n        </div>\n    </ng-container>\n</lb9-content-popup>\n<lb9-content-popup #confirmPopUp [header]=\"config.content ? config.content.confirmDeleteHeader : ''\">\n    <div class=\"btn-style-dynamic\" (click)=\"confirmDelete()\" [innerHTML]=\"button.confirm\"></div>\n    <div class=\"btn-style-dynamic clearBtn\" (click)=\"confirmPopUp.closePopup(true)\" [innerHTML]=\"button.cancel\"></div>\n</lb9-content-popup>\n<lb9-content-popup #errorPopUp [header]=\"'Error'\">\n    <div>{{errorContent}}</div>\n    <div class=\"btnPanel\">\n        <div class=\"btn-style-dynamic text-center\" (click)=\"actKnownError()\" [innerHTML]=\"button.confirm\"></div>\n    </div>\n</lb9-content-popup>\n",
                styles: [""]
            },] }
];
AutoFormComponent.ctorParameters = () => [
    { type: FormHttpRequestService },
    { type: LockScreenService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xpZ2h0LWJyZWFrLWR5bmFtaWMvc3JjL2xpYi9jb21wb25lbnQvYXV0by1mb3JtL2F1dG8tZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUMsK0JBQStCLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUN2RyxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUMvRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQU9wRSxNQUFNLE9BQU8saUJBQWtCLFNBQVEsK0JBQStCO0lBQ3BFLFlBQW9CLElBQTRCLEVBQVUsT0FBeUI7UUFDakYsS0FBSyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQTtRQURGLFNBQUksR0FBSixJQUFJLENBQXdCO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7SUFFbkYsQ0FBQzs7O1lBUkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxlQUFlO2dCQUN6Qiw0OEZBQXlDOzthQUUxQzs7O1lBUE8sc0JBQXNCO1lBQ3RCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0F1dG9Gb3JtTWFzdGVyRnVuY3Rpb25Db21wb25lbnR9IGZyb20gJy4uL21hc3Rlci1mdW5jdGlvbi9hdXRvLWZvcm0tbWFzdGVyLWZ1bmN0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQge0Zvcm1IdHRwUmVxdWVzdFNlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2UvZm9ybS1odHRwLXJlcXVlc3Quc2VydmljZSc7XG5pbXBvcnQge0xvY2tTY3JlZW5TZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlL2xvY2stc2NyZWVuLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsYjktYXV0by1mb3JtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2F1dG8tZm9ybS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2F1dG8tZm9ybS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQXV0b0Zvcm1Db21wb25lbnQgZXh0ZW5kcyBBdXRvRm9ybU1hc3RlckZ1bmN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBGb3JtSHR0cFJlcXVlc3RTZXJ2aWNlLCBwcml2YXRlIGxvY2tTY3I6TG9ja1NjcmVlblNlcnZpY2UpIHtcbiAgICBzdXBlcihodHRwLCBsb2NrU2NyKVxuICB9XG59XG4iXX0=